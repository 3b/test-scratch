name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: ${{ matrix.lisp }} on ${{ matrix.os }}
    strategy:
      matrix: 
        # sbcl32 and clisp32 don't work, clasp won't build on CI servers?
        lisp: [sbcl-bin,ccl,ccl32,ecl,clisp,allegro]
        #lisp: [sbcl, ccl, ecl]
        #os: [ubuntu-latest] #, macos-latest]
        os:: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
      
    runs-on: ${{ matrix.os }}
    
    steps:
    # Check out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # check out extra repo if not in QL, or version in ql is too old
    - run: mkdir -p ~/lisp/
    - name: extra repos
      uses: actions/checkout@v2
      with:
        repository: trivial-features/trivial-features
        path: ~/lisp/trivial-features
    
    - name: calculate cache name
      run: echo "::set-env name=cache-key::$(date +%B%d)"
   
    - name: caches
      run: |
        echo cache key = ${{ env.cache-key }}
        echo ${{ runner.os }}-${{ matrix.lisp }}-dot-roswell-${{ hashFiles('**/*.asd') }}
    
    - name: cache .roswell
      id: cache-dot-roswell
      uses: actions/cache@v1
      with:
        path: ~/.roswell
        key: ${{ runner.os }}-${{ matrix.lisp }}-dot-roswell-${{ hashFiles('**/*.asd') }}
        restore-keys: ${{ runner.os }}-${{ matrix.lisp }}-dot-roswell-
        
    - name: install roswell
      # always run install, since it does some global installs and setup that isn't cached
      env:
       LISP: ${{ matrix.lisp }}
      run: curl -L https://raw.githubusercontent.com/roswell/roswell/master/scripts/install-for-ci.sh | sh
    
    - name: run lisp
      run: |
        ros -e '(format t "~a:~a on ~a~%" (lisp-implementation-type) (lisp-implementation-version) (machine-type))'
        ros -e '(format t " fixnum bits:~a~%" (integer-length most-positive-fixnum))'
        
    - name: load code from clean fasl cache
      run: |
        rm -rf ~/.cache/common-lisp/
        mkdir -p ~/.cache/common-lisp/
        ros -e "(ql:quickload 'testing123)"
        
    - name: load code from fasls and run tests
      run: |
        ros -e "(ql:quickload 'testing123)" -e "(pngload.test:test-images)"
        
    - name: test read times
      run: |
        curl http://3bb.cc/tmp/fft.png -o /tmp/fft.png
        ros -e "(ql:quickload 'testing123)" -e '(pngload.test:test-read-times "/tmp/fft.png" :count 10)'
    
    
    
