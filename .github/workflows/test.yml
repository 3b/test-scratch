name: CI
on:
  push:
    branches: [ master,sbcl ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: ${{ matrix.lisp }} on ${{ matrix.os }}
    strategy:
      matrix: 
        lisp: [0,1,2,3,4,5]
        os: [windows-latest]
      fail-fast: false
      
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ fromJSON('[ "bash", "msys2 {0}" ]') [ matrix.os == 'windows-latest' ] }}
    
    steps:
    # Check out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    
    - name: install sbcl
      shell: pwsh
      run: |
         msiexec /i ${{ fromJSON('[ "sbcl-2.1.11-x86-64-windows-binary.msi",
                                    "sbcl-2.1.11.145-238d5368e-x86-64-windows-binary.msi",
                                    "sbcl-2.1.11-x86-64-windows-binary.msi",
                                    "sbcl-2.1.11.145-238d5368e-x86-64-windows-binary.msi",
                                    "sbcl-2.1.11-x86-64-windows-binary.msi",
                                    "sbcl-2.1.11.145-238d5368e-x86-64-windows-binary.msi"]') [ matrix.lisp ] }} /qn
         echo "C:\Program Files\Steel Bank Common Lisp\" | Out-File -FilePath $env:GITHUB_PATH -Append

    - uses: msys2/setup-msys2@v2
      with:
        path-type: inherit
        msystem: MINGW64
        release: false
        update: false

    - name: Print system version
      run: |
        uname
        which sbcl
        
    - name: cache ql
      id: cache-ql
      uses: actions/cache@v1
      with:
        path: C:/msys64/home/runneradmin/quicklisp/
        key: ${{ runner.os }}-ql-${{ matrix.lisp }}-${{ hashFiles('**/*.asd') }}
        restore-keys: ${{ runner.os }}-ql-
 
    - name: install ql
      run: |
         wget https://beta.quicklisp.org/quicklisp.lisp
         sbcl --load "C:/msys64/home/runneradmin/quicklisp/setup.lisp"  --eval "(ql-util:without-prompting (ql:add-to-init-file))" --quit  || sbcl --load quicklisp.lisp --eval "(quicklisp-quickstart:install)" --eval "(ql-util:without-prompting (ql:add-to-init-file))" --quit
         
    - name: run lisp
      continue-on-error: true
      run: |
        echo 1
        sbcl --eval '(format t "home = ~s~%" (user-homedir-pathname))' --quit
        sbcl --eval '(format t "~a:~a on ~a~%...~%~%" (lisp-implementation-type) (lisp-implementation-version) (machine-type))' --quit
        echo 3
        sbcl --eval '(format t " fixnum bits:~a~%" (integer-length most-positive-fixnum))' --quit
        sbcl --eval "(format t \"tf = ~s~%\" (ql:where-is-system 'trivial-features))" --quit
        sbcl --eval "(format t \"cffi= ~s~%\" (ql:where-is-system 'cffi))" --quit
        sbcl --eval '(format t "init features = ~s~%" *features*)' --quit
      
    - name: run 0
      continue-on-error: true
      run: |
          rm -rf $USERPROFILE/AppData/Local/cache/common-lisp/ || true
          sbcl --eval "(ql:quickload 'cffi)" --quit
          
    - name: run 1
      continue-on-error: true
      run: |
          rm -rf $USERPROFILE/AppData/Local/cache/common-lisp/ || true
          sbcl --eval "(ql:quickload 'cffi)" --quit

    - name: run 2
      continue-on-error: true
      run: |
          rm -rf $USERPROFILE/AppData/Local/cache/common-lisp/ || true
          sbcl --eval "(ql:quickload 'cffi)" --quit
          
    - name: run 3
      continue-on-error: true
      run: |
          rm -rf $USERPROFILE/AppData/Local/cache/common-lisp/ || true
          sbcl --eval "(ql:quickload 'cffi)" --quit
          
    - name: run 4
      continue-on-error: true
      run: |
          rm -rf $USERPROFILE/AppData/Local/cache/common-lisp/ || true
          sbcl --eval "(ql:quickload 'cffi)" --quit
          
    - name: run 5
      continue-on-error: true
      run: |
          rm -rf $USERPROFILE/AppData/Local/cache/common-lisp/ || true
          sbcl --eval "(ql:quickload 'cffi)" --quit
          
    - name: run 6
      continue-on-error: true
      run: |
          rm -rf $USERPROFILE/AppData/Local/cache/common-lisp/ || true
          sbcl --eval "(ql:quickload 'cffi)" --quit
          
