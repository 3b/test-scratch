name: CI
on:
  push:
    branches: [ master,sbcl ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: ${{ matrix.package }} - ${{ matrix.lisp }}
    strategy:
      matrix: 
        package: [cffi,pngload,pngload.test]
        lisp: [0] #,1,2,3,4,5]
      fail-fast: false
      
    runs-on: windows-latest
    defaults:
      run:
        shell: "msys2 {0}"
    
    steps:
    # Check out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        path: test-scratch

    - name: ci-utils fork
      uses: actions/checkout@v2
      with:
        repository: 3b/ci-utils
        ref: test2
        path: ci-utils

    
    - name: install sbcl
      shell: pwsh
      run: |
         msiexec /i ${{ fromJSON('[ "test-scratch/sbcl-2.1.11-x86-64-windows-binary.msi",
                                    "test-scratch/sbcl-2.1.11-x86-64-windows-binary-ros.msi",
                                    "test-scratch/sbcl-2.1.11.145-238d5368e-x86-64-windows-binary.msi",
                                    "test-scratch/sbcl-2.1.11-x86-64-windows-binary.msi",
                                    "test-scratch/sbcl-2.1.11-x86-64-windows-binary-ros.msi",
                                    "test-scratch/sbcl-2.1.11.145-238d5368e-x86-64-windows-binary.msi",
                                    "test-scratch/sbcl-2.1.11-x86-64-windows-binary.msi",
                                    "test-scratch/sbcl-2.1.11-x86-64-windows-binary-ros.msi",
                                    "test-scratch/sbcl-2.1.11.145-238d5368e-x86-64-windows-binary.msi"]') [ matrix.lisp ] }} /qn
         echo "C:\Program Files\Steel Bank Common Lisp\" | Out-File -FilePath $env:GITHUB_PATH -Append

    - uses: msys2/setup-msys2@v2
      with:
        path-type: inherit
        msystem: MINGW64
        release: false
        update: false

    - name: Print system version
      run: |
        uname
        which sbcl
        
    - name: cache ql
      id: cache-ql
      uses: actions/cache@v1
      with:
        path: C:/msys64/home/runneradmin/quicklisp/
        key: ${{ runner.os }}-ql-p3-${{ matrix.lisp }}-${{ hashFiles('**/*.asd') }}
        restore-keys: ${{ runner.os }}-ql-
 
    - name: install ql
      run: |
         wget https://beta.quicklisp.org/quicklisp.lisp
         sbcl --load "C:/msys64/home/runneradmin/quicklisp/setup.lisp"  --eval "(ql-util:without-prompting (ql:add-to-init-file))" --quit  || sbcl --load quicklisp.lisp --eval "(quicklisp-quickstart:install)" --eval "(ql-util:without-prompting (ql:add-to-init-file))" --quit
         
    - name: run lisp
      continue-on-error: true
      run: |
        echo 1
        sbcl --eval '(format t "home = ~s~%" (user-homedir-pathname))' --quit
        sbcl --eval '(format t "~a:~a on ~a~%...~%~%" (lisp-implementation-type) (lisp-implementation-version) (machine-type))' --quit
        echo 3
        sbcl --eval '(format t " fixnum bits:~a~%" (integer-length most-positive-fixnum))' --quit
        sbcl --eval '(format t "init features = ~s~%" *features*)' --quit
      
    - name: run 0
      continue-on-error: true
      run: |
          rm -rf $USERPROFILE/AppData/Local/cache/common-lisp/ || true
          sbcl --eval "(ql:quickload '${{ matrix.package }})" --quit
          
    - name: run 1
      continue-on-error: true
      run: |
          rm -rf $USERPROFILE/AppData/Local/cache/common-lisp/ || true
          sbcl --eval "(ql:quickload '${{ matrix.package }})" --quit

    - name: run 2
      continue-on-error: true
      run: |
          rm -rf $USERPROFILE/AppData/Local/cache/common-lisp/ || true
          sbcl --eval "(ql:quickload '${{ matrix.package }})" --quit
          
    - name: run 3
      continue-on-error: true
      run: |
          rm -rf $USERPROFILE/AppData/Local/cache/common-lisp/ || true
          sbcl --eval "(ql:quickload '${{ matrix.package }})" --quit

    - name: ci
      continue-on-error: true
      run: |
          rm -rf $USERPROFILE/AppData/Local/cache/common-lisp/ || true
          sbcl --script "CI-utils/roswell/run-test-forms.ros" --eval '(ros.script.run-test-forms::main "-l" "${{ matrix.package }}" "t")'